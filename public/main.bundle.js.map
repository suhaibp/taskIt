{"version":3,"sources":["G:/taskit/taskIt/angular/src/$_lazy_route_resource lazy","G:/taskit/taskIt/angular/src/app/app.component.css","G:/taskit/taskIt/angular/src/app/app.component.html","G:/taskit/taskIt/angular/src/app/app.component.ts","G:/taskit/taskIt/angular/src/app/app.module.ts","G:/taskit/taskIt/angular/src/app/components/admin-plan/admin-plan.component.css","G:/taskit/taskIt/angular/src/app/components/admin-plan/admin-plan.component.html","G:/taskit/taskIt/angular/src/app/components/admin-plan/admin-plan.component.ts","G:/taskit/taskIt/angular/src/app/components/admin-sidebar/admin-sidebar.component.css","G:/taskit/taskIt/angular/src/app/components/admin-sidebar/admin-sidebar.component.html","G:/taskit/taskIt/angular/src/app/components/admin-sidebar/admin-sidebar.component.ts","G:/taskit/taskIt/angular/src/app/components/admin-topbar/admin-topbar.component.css","G:/taskit/taskIt/angular/src/app/components/admin-topbar/admin-topbar.component.html","G:/taskit/taskIt/angular/src/app/components/admin-topbar/admin-topbar.component.ts","G:/taskit/taskIt/angular/src/app/components/reference-component/reference-component.component.css","G:/taskit/taskIt/angular/src/app/components/reference-component/reference-component.component.html","G:/taskit/taskIt/angular/src/app/components/reference-component/reference-component.component.ts","G:/taskit/taskIt/angular/src/app/config/config.ts","G:/taskit/taskIt/angular/src/app/services/admin.service.ts","G:/taskit/taskIt/angular/src/environments/environment.ts","G:/taskit/taskIt/angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\r\\n <router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/app.component.ts","import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {Config} from './config/config';\r\nimport { AppComponent } from './app.component';\r\nimport { ReferenceComponentComponent } from './components/reference-component/reference-component.component';\r\nimport { AdminSidebarComponent } from './components/admin-sidebar/admin-sidebar.component';\r\nimport { AdminTopbarComponent } from './components/admin-topbar/admin-topbar.component';\r\nimport { AdminPlanComponent } from './components/admin-plan/admin-plan.component';\r\nimport { AdminService} from './services/admin.service';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n \r\n // MatFormFieldModule\r\n} from '@angular/material';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: ReferenceComponentComponent },\r\n  {path:'reference', component:ReferenceComponentComponent},\r\n  {path:'admin-sidebar', component:AdminSidebarComponent},\r\n  {path:'admin-topbar', component:AdminTopbarComponent},\r\n  {path:'admin-plan', component:AdminPlanComponent},\r\n]\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n  ],\r\n})\r\nexport class DemoMaterialModule {}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ReferenceComponentComponent,\r\n    AdminSidebarComponent,\r\n    AdminTopbarComponent,\r\n    AdminPlanComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DemoMaterialModule,\r\n    NoopAnimationsModule,\r\n    BrowserAnimationsModule,\r\n    NoopAnimationsModule,\r\n    HttpModule,\r\n  ],\r\n  providers: [Config,AdminService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Structure */\\r\\n.example-container {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-direction: column;\\r\\n        flex-direction: column;\\r\\n    min-width: 300px;\\r\\n  }\\r\\n  \\r\\n  .example-header {\\r\\n    min-height: 64px;\\r\\n    padding: 8px 24px 0;\\r\\n  }\\r\\n  \\r\\n \\r\\n  .mat-form-field {\\r\\n    /* font-size: 14px; */\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n  .example-container {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-direction: column;\\r\\n        flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .add-project{\\r\\n    float:right;\\r\\n    margin-right : 50px;\\r\\n    margin-top : 50px;\\r\\n  }\\r\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/admin-plan/admin-plan.component.css\n// module id = ../../../../../src/app/components/admin-plan/admin-plan.component.css\n// module chunks = main","module.exports = \"<body class=\\\"home\\\">\\n        <div class=\\\"container-fluid display-table\\\">\\n            <div class=\\\"row display-table-row\\\">\\n              <div class=\\\"col-md-1 col-xs-2 display-table-cell v-align box\\\" id=\\\"navigation\\\">\\n              <admin-sidebar></admin-sidebar>\\n              <!-- <nav class=\\\"nav-sidebar\\\">\\n                    <ul class=\\\"nav tabs buttonleft\\\"> -->\\n                          <!-- <li > -->\\n                           \\n                          <!-- </li> -->\\n                          \\n                         \\n                          <!-- <li [ngClass]=\\\"{'active1': viewComp == 'Active'}\\\"><a (click)=\\\"updateView('Active')\\\" href=\\\"#tab4\\\" data-toggle=\\\"tab\\\">Active Users</a></li> \\n                          <li [ngClass]=\\\"{'active1': viewComp == 'Blocked'}\\\"><a (click)=\\\"updateView('Blocked')\\\" href=\\\"#tab2\\\" data-toggle=\\\"tab\\\">Blocked Users</a></li>\\n                          <li [ngClass]=\\\"{'active1': viewComp == 'Delete'}\\\"><a (click)=\\\"updateView('Delete')\\\" href=\\\"#tab3\\\" data-toggle=\\\"tab\\\">Delete Users</a></li>   -->\\n                                                       \\n                    <!-- </ul>\\n                  </nav> -->\\n              </div>\\n              <admin-topbar></admin-topbar>\\n\\n                <div class=\\\"col-md-12 col-xs-9\\\">\\n                    <!--<button type=\\\"button\\\" class=\\\"slide-toggle\\\">Slide Toggle</button> -->\\n                    <div class=\\\"row\\\">\\n                       \\n                      \\n      \\n                      <div class=\\\"example-container mat-elevation-z8\\\">\\n                            <div class=\\\"example-header\\\">\\n                              <mat-form-field>\\n                                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n                              </mat-form-field>\\n                            </div>\\n                          \\n                            <mat-table #table [dataSource]=\\\"dataSource\\\">\\n                          \\n                              <!-- Position Column -->\\n                              <ng-container matColumnDef=\\\"s/no\\\">\\n                                <mat-header-cell *matHeaderCellDef> S/No </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\">  </mat-cell>\\n                              </ng-container>\\n                          \\n                              <!-- Name Column -->\\n                              <ng-container matColumnDef=\\\"planname\\\">\\n                                <mat-header-cell *matHeaderCellDef> Plan Name </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\">  </mat-cell>\\n                              </ng-container>\\n                          \\n                              <!-- Weight Column -->\\n                              <ng-container matColumnDef=\\\"price\\\">\\n                                <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\"> </mat-cell>\\n                              </ng-container>\\n                          \\n                              <!-- Symbol Column -->\\n                              <ng-container matColumnDef=\\\"noprojects\\\">\\n                                <mat-header-cell *matHeaderCellDef> No of projects </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\">  </mat-cell>\\n                              </ng-container>\\n                              <ng-container matColumnDef=\\\"nomembers\\\">\\n                                    <mat-header-cell *matHeaderCellDef> No of Members </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\">  </mat-cell>\\n                                  </ng-container>\\n                                  <ng-container matColumnDef=\\\"nomodules\\\">\\n                                        <mat-header-cell *matHeaderCellDef> No of Modules </mat-header-cell>\\n                                        <mat-cell *matCellDef=\\\"let element\\\">  </mat-cell>\\n                                      </ng-container>\\n                          \\n                                      <ng-container matColumnDef=\\\"notasks\\\">\\n                                            <mat-header-cell *matHeaderCellDef> No of Tasks </mat-header-cell>\\n                                            <mat-cell *matCellDef=\\\"let element\\\">  </mat-cell>\\n                                          </ng-container>\\n                                          <ng-container matColumnDef=\\\"action\\\">\\n                                              <mat-header-cell *matHeaderCellDef> Actions</mat-header-cell>\\n                                              <mat-cell *matCellDef=\\\"let element\\\">  </mat-cell>\\n                                            </ng-container>\\n                              <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                              <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                            </mat-table>\\n                          </div>\\n                    </div>\\n                </div>\\n                            <div class=\\\"add-button\\\">\\n                              <button type=\\\"button\\\" class=\\\"add-project\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\" data-backdrop=\\\"static\\\">+</button>\\n                            </div>\\n\\n\\n          <!-- -------------------------------------------------------------add new----------------------------------------------------------------------------- -->\\n          <div id=\\\"addModal\\\"  class=\\\"modal fade\\\">\\n              <div class=\\\"modal-dialog\\\">\\n              \\n                <!-- Modal content-->\\n                <div class=\\\"modal-content\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeBtn>&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Add New Plan</h4>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                    \\n                <form  role=\\\"form\\\"  #f=\\\"ngForm\\\" (ngSubmit)=\\\"addPlan(newPlan);\\\" novalidate >\\n                \\n                    <div  >\\n                      <div class=\\\"example-container\\\">\\n                        <mat-form-field>\\n                          <input matInput placeholder=\\\"Plan Name\\\"  name =\\\"planname\\\" [(ngModel)]=\\\"newPlan.planname\\\"  required>\\n                        </mat-form-field>\\n                      \\n                        <mat-form-field>\\n                          <span matPrefix>₹&nbsp;</span>\\n                          <input matInput placeholder=\\\"Price\\\" type=\\\"number\\\" min=\\\"1\\\"  class=\\\"example-right-align\\\"  name =\\\"planprice\\\" [(ngModel)]=\\\"newPlan.planprice\\\"  required>\\n                          \\n                          <!-- <span matSuffix>.00</span> -->\\n                        </mat-form-field>\\n                      \\n                        <mat-form-field>\\n\\n                          <mat-select placeholder=\\\"No of projects\\\"  name=\\\"surveyno\\\"  [(ngModel)]=\\\"newPlan.surveyno\\\" required>\\n\\n                            <mat-option value=\\\"Unlimited\\\">Unlimited</mat-option>\\n                            <mat-option value=\\\"limited\\\">limited</mat-option>\\n                          \\n                          </mat-select>\\n                        </mat-form-field>\\n\\n                        \\n                          \\n                        <mat-form-field *ngIf=\\\"newPlan.surveyno == 'limited'\\\" >\\n                            <input  matInput placeholder=\\\"value\\\" type=\\\"number\\\" name=\\\"value1\\\"  [(ngModel)]=\\\"newPlan.value1\\\" min=\\\"1\\\" oninput=\\\"validity.valid||(value='');\\\">\\n                          </mat-form-field>\\n                        \\n                        <mat-form-field>\\n                          <mat-select placeholder=\\\"No of Members\\\"  name=\\\"surveyqtno\\\"  [(ngModel)]=\\\"newPlan.surveyqtno\\\" required>\\n                            <mat-option value=\\\"Unlimited\\\">Unlimited</mat-option>\\n                            <mat-option value=\\\"limited\\\">limited</mat-option>\\n                          \\n                          </mat-select>\\n\\n                        </mat-form-field>\\n                        <mat-form-field *ngIf=\\\"newPlan.surveyqtno == 'limited'\\\" >\\n                            <input  matInput placeholder=\\\"value\\\" type=\\\"number\\\"name=\\\"value2\\\"  [(ngModel)]=\\\"newPlan.value2\\\" min=\\\"1\\\" oninput=\\\"validity.valid||(value='');\\\">\\n                          </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"No of Modules\\\"   name=\\\"surveyattno\\\"  [(ngModel)]=\\\"newPlan.surveyattno\\\" required>\\n                              <mat-option value=\\\"Unlimited\\\">Unlimited</mat-option>\\n                              <mat-option value=\\\"limited\\\">limited</mat-option>\\n                            \\n                            </mat-select>\\n                          </mat-form-field>\\n                          <mat-form-field *ngIf=\\\"newPlan.surveyattno == 'limited'\\\" >\\n                              <input  matInput placeholder=\\\"value\\\" type=\\\"number\\\" name=\\\"value3\\\"  [(ngModel)]=\\\"newPlan.value3\\\" min=\\\"1\\\" oninput=\\\"validity.valid||(value='');\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <mat-select placeholder=\\\"No of Tasks\\\"   name=\\\"surveyattno\\\"  [(ngModel)]=\\\"newPlan.surveyattno\\\" required>\\n                                  <mat-option value=\\\"Unlimited\\\">Unlimited</mat-option>\\n                                  <mat-option value=\\\"limited\\\">limited</mat-option>\\n                                \\n                                </mat-select>\\n                              </mat-form-field>\\n                              <mat-form-field *ngIf=\\\"newPlan.surveyattno == 'limited'\\\" >\\n                                  <input  matInput placeholder=\\\"value\\\" type=\\\"number\\\" name=\\\"value4\\\"  [(ngModel)]=\\\"newPlan.value4\\\" min=\\\"1\\\" oninput=\\\"validity.valid||(value='');\\\">\\n                                </mat-form-field>\\n                   \\n\\n                      </div>\\n                          \\n                    </div>\\n                    <br>\\n                    <!-- <div *ngIf=\\\"showSpinner\\\">\\n                        <mat-spinner></mat-spinner>\\n                       </div> -->\\n                   \\n\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <button type= \\\"submit\\\" [disabled]=\\\"btnDisbled\\\" class=\\\"add-project\\\" >Submit</button>\\n                \\n                              </div>\\n                              <div class=\\\"col-md-8\\\" *ngIf=\\\"showSpinner\\\" >\\n                                     <svg class=\\\"svgclass\\\" version=\\\"1.1\\\" id=\\\"loader-1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n                                     width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 50 50\\\" style=\\\"enable-background:new 0 0 50 50;\\\" xml:space=\\\"preserve\\\">\\n                                 <path fill=\\\"#000\\\" d=\\\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\\\">\\n                                   <animateTransform attributeType=\\\"xml\\\"\\n                                     attributeName=\\\"transform\\\"\\n                                     type=\\\"rotate\\\"\\n                                     from=\\\"0 25 25\\\"\\n                                     to=\\\"360 25 25\\\"\\n                                     dur=\\\"0.6s\\\"\\n                                     repeatCount=\\\"indefinite\\\"/>\\n                                   </path>\\n                                 </svg>\\n                              </div>\\n                               \\n                            </div>\\n                   \\n                </form>\\n                  </div>\\n                  <div class=\\\"modal-footer\\\">\\n                  </div>\\n                </div>\\n                \\n              </div>\\n            </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n      </div>\\n    </div>\\n    \\n      <!-- Modal -->\\n    \\n     <script src=\\\"http://code.jquery.com/jquery-1.11.1.js\\\"></script>\\n    <script src=\\\"js/bootstrap.min.js\\\"></script>\\n     \\n    \\n    </body>\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/admin-plan/admin-plan.component.html\n// module id = ../../../../../src/app/components/admin-plan/admin-plan.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {ViewChild,ElementRef } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, MatSnackBar } from '@angular/material';\nimport {Router} from '@angular/router';\nimport { AdminService} from './../../services/admin.service';\n@Component({\n  selector: 'admin-plan',\n  templateUrl: './admin-plan.component.html',\n  styleUrls: ['./admin-plan.component.css']\n})\nexport class AdminPlanComponent implements OnInit {\n  displayedColumns = ['s/no', 'planname', 'price', 'noprojects','nomembers','nomodules','notasks','action'];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild('closeBtn') closeBtn: ElementRef;\n  showSpinner :boolean = false;\n  plan ={\n    \n        plan_name: '',\n        plan_price: '',\n        no_survey:'',\n        numofsurvey:'',\n        no_question: '',\n        numofqtn:'',\n        no_survey_attenders: '',\n        numofsurveyattn:'',\n      \n        \n        \n      };\n      newPlan={planname:'',\n      planprice:'',\n      surveyno:'',\n      surveyqtno:'',\n      surveyattno:'',\n      value1:'',\n      value2:'',\n      value3:'',\n      value4:'',\n      \n    }\n  constructor(public snackBar: MatSnackBar,private _adminService : AdminService) { }\n\n  ngOnInit() {\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  addPlan(newPlan){\n    console.log(\"dfd\");\n  }\n\n  // addPlan(newPlan){\n  //   this.showSpinner =true;\n  // //  // console.log(newPlan);\n      \n  //     this.adminService.addPlan(this.newPlan).subscribe(addPlan=>{\n  //       if(!addPlan.success){\n  //         this.showSpinner =false\n  //         let snackBarRef =  this.snackBar.open(addPlan.msg, '', {\n  //           duration: 2000\n  //       });\n          \n          \n        \n  //     }\n  //     else if(addPlan.success){\n  //       this.showSpinner =false\n  //       let snackBarRef =  this.snackBar.open(addPlan.msg, '', {\n  //         duration: 2000\n          \n  //     });\n  //     this.closeBtn.nativeElement.click();\n      \n  //     }\n  \n  //   });\n  \n  //  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/components/admin-plan/admin-plan.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/admin-sidebar/admin-sidebar.component.css\n// module id = ../../../../../src/app/components/admin-sidebar/admin-sidebar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"logo\\\">\\r\\n    <a href=\\\"\\\"><img src=\\\"./assets/images/logo.jpg\\\" alt=\\\"\\\" class=\\\"\\\">\\r\\n   \\r\\n</a>\\r\\n</div>\\r\\n\\r\\n<nav class=\\\"navbar navbar-default\\\">\\r\\n\\r\\n<!-- Brand and toggle get grouped for better mobile display -->\\r\\n<div class=\\\"navbar-header\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\r\\n    <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n    <span class=\\\"icon-bar\\\"></span>\\r\\n    <span class=\\\"icon-bar\\\"></span>\\r\\n    <span class=\\\"icon-bar\\\"></span>\\r\\n  </button>\\r\\n \\r\\n</div>\\r\\n\\r\\n<!-- Collect the nav links, forms, and other content for toggling -->\\r\\n<div class=\\\"collapse navbar-collapse navi\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n    <ul class=\\\"zx nav navbar-nav\\\">\\r\\n        <li  [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n          <a routerLink=\\\"/admin-dashboard\\\"><i class=\\\"fa fa-desktop\\\" aria-hidden=\\\"true\\\"></i><span class=\\\"\\\">Dashboard</span></a></li>\\r\\n        <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n          <a routerLink=\\\"/admin-company\\\"><i class=\\\"fa fa-building-o\\\"></i> Company</a></li>\\r\\n        <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\r\\n          <a routerLink=\\\"\\\"><i class=\\\"fa fa-file-text\\\" aria-hidden=\\\"true\\\"></i><span class=\\\"\\\">Plan</span></a></li>\\r\\n    </ul>\\r\\n \\r\\n \\r\\n</div><!-- /.navbar-collapse -->\\r\\n\\r\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/admin-sidebar/admin-sidebar.component.html\n// module id = ../../../../../src/app/components/admin-sidebar/admin-sidebar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'admin-sidebar',\n  templateUrl: './admin-sidebar.component.html',\n  styleUrls: ['./admin-sidebar.component.css']\n})\nexport class AdminSidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/components/admin-sidebar/admin-sidebar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/admin-topbar/admin-topbar.component.css\n// module id = ../../../../../src/app/components/admin-topbar/admin-topbar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n        <header>\\r\\n            \\r\\n            <div class=\\\"col-md-5 pull-right\\\">\\r\\n                <div class=\\\"header-rightside\\\">\\r\\n                    <ul class=\\\"list-inline header-top pull-right\\\">\\r\\n                        <li class=\\\"\\\"><a href=\\\"#\\\" class=\\\"add-project\\\">Add Project</a></li>\\r\\n                        \\r\\n                        <li>\\r\\n                            <a href=\\\"#\\\" class=\\\"icon-info\\\">\\r\\n                                <i class=\\\"fa fa-bell\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                <span class=\\\"label label-primary\\\">3</span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"dropdown\\\">\\r\\n                            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"><i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                <b class=\\\"caret\\\"></b></a>\\r\\n                            <ul class=\\\"dropdown-menu\\\">\\r\\n                                <li>\\r\\n                                    <div class=\\\"navbar-content\\\">\\r\\n                                        <span>JS Krishna</span>\\r\\n                                        <p class=\\\"text-muted small\\\">\\r\\n                                            me@jskrishna.com\\r\\n                                        </p>\\r\\n                                        <div class=\\\"divider\\\">\\r\\n                                        </div>\\r\\n                                        <a href=\\\"#\\\" class=\\\"view btn-sm active\\\">View Profile</a>\\r\\n                                    </div>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </li>\\r\\n                        <li><a href=\\\"#\\\"><i class=\\\"fa fa-power-off\\\" aria-hidden=\\\"true\\\"></i></a></li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </header>\\r\\n    </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/admin-topbar/admin-topbar.component.html\n// module id = ../../../../../src/app/components/admin-topbar/admin-topbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'admin-topbar',\n  templateUrl: './admin-topbar.component.html',\n  styleUrls: ['./admin-topbar.component.css']\n})\nexport class AdminTopbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/components/admin-topbar/admin-topbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.home {\\r\\n    background: #f6f7fa;\\r\\n    height: 100%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/reference-component/reference-component.component.css\n// module id = ../../../../../src/app/components/reference-component/reference-component.component.css\n// module chunks = main","module.exports = \"<body class=\\\"home\\\">\\r\\n        <div class=\\\"container-fluid display-table\\\">\\r\\n            <div class=\\\"row display-table-row\\\">\\r\\n          \\r\\n                <div class=\\\"col-md-1 col-xs-12 display-table-cell v-align box\\\" id=\\\"navigation\\\">\\r\\n                     <!-- sidebar-->\\r\\n                   \\r\\n                     <admin-sidebar></admin-sidebar> \\r\\n                     <!-- end sidebar-->\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                    <!--<button type=\\\"button\\\" class=\\\"slide-toggle\\\">Slide Toggle</button> -->\\r\\n                    <!-- topbar-->\\r\\n                    <admin-topbar></admin-topbar> \\r\\n                    \\r\\n                        <!-- end topbar-->\\r\\n                    \\r\\n                    \\r\\n                    <div class=\\\"user-dashboard\\\">\\r\\n                        <h1>Hello, JS</h1>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-5 col-sm-5 col-xs-12 gutter\\\">\\r\\n    \\r\\n                                <div class=\\\"sales\\\">\\r\\n                                    <h2>Your Sale</h2>\\r\\n    \\r\\n                                    <div class=\\\"btn-group\\\">\\r\\n                                        <button class=\\\"btn btn-secondary btn-lg dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                            <span>Period:</span> Last Year\\r\\n                                        </button>\\r\\n                                        <div class=\\\"dropdown-menu\\\">\\r\\n                                            <a href=\\\"#\\\">2012</a>\\r\\n                                            <a href=\\\"#\\\">2014</a>\\r\\n                                            <a href=\\\"#\\\">2015</a>\\r\\n                                            <a href=\\\"#\\\">2016</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-7 col-sm-7 col-xs-12 gutter\\\">\\r\\n    \\r\\n                                <div class=\\\"sales report\\\">\\r\\n                                    <h2>Report</h2>\\r\\n                                    <div class=\\\"btn-group\\\">\\r\\n                                        <button class=\\\"btn btn-secondary btn-lg dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                            <span>Period:</span> Last Year\\r\\n                                        </button>\\r\\n                                        <div class=\\\"dropdown-menu\\\">\\r\\n                                            <a href=\\\"#\\\">2012</a>\\r\\n                                            <a href=\\\"#\\\">2014</a>\\r\\n                                            <a href=\\\"#\\\">2015</a>\\r\\n                                            <a href=\\\"#\\\">2016</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                    <!-- footer-->\\r\\n                    <admin-footer></admin-footer>\\r\\n           <!-- end footer-->\\r\\n            </div>\\r\\n             </div>\\r\\n            <!-- Modal -->\\r\\n         </body>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/taskit/taskIt/angular/src/app/components/reference-component/reference-component.component.html\n// module id = ../../../../../src/app/components/reference-component/reference-component.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reference-component',\r\n  templateUrl: './reference-component.component.html',\r\n  styleUrls: ['./reference-component.component.css']\r\n})\r\nexport class ReferenceComponentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/components/reference-component/reference-component.component.ts","export class Config {\r\n    socketURL = \"http://localhost:3000\";\r\n    siteUrl = \"http://localhost:3000\";\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/config/config.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AdminService {\r\n\r\n  constructor() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/app/services/admin.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// G:/taskit/taskIt/angular/src/main.ts"],"sourceRoot":"webpack:///"}